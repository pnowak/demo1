<canvas id="chart"></canvas>
<div id="code">
  <textarea id="codeExample" name="">
class ChartJsWrapper {
  constructor(chartJsRootId, hotInstance) {
    this.name = 'ChartJs';
    this.chart = new Chart(document.getElementById(chartJsRootId),
    ChartJsWrapper.getChartOptions(hotInstance));
  }

  static getChartOptions(hotInstance) {
    return {
      type: 'bar',
      data: {
        labels: hotInstance.getSettings().colHeaders,
        datasets: [{
          data: hotInstance.getDataAtRow(0),
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)',
          ],
          borderColor: [
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
          ],
          borderWidth: 1,
        }],
      },
      options: {
        legend: {
          display: false,
        },
        title: {
          display: true,
          fontSize: 32,
          fontStyle: 'normal',
          text: 'Chart.js & Handsontable',
        },
        tooltips: {
          titleFontSize: 24,
          bodyFontSize: 21,
        },
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true,
              fontSize: 24,
            },
          }],
          xAxes: [{
            ticks: {
              fontSize: 24,
            },
          }],
        },
      },
    };
  }

  updateChartData(column, value) {
    this.chart.data.datasets[0].data[column] = value;
    this.chart.update();
  }
}

const chartWrappers = [];

const mapChartsToWrapper = {
  HighCharts: HighchartsWrapper,
  amCharts: AmChartsWrapper,
  'Chart.js': ChartJsWrapper,
};

const mapChartNameToPackage = {
  HighCharts: 'highcharts',
  amCharts: 'amcharts3',
  'Chart.js': 'chart.js',
};

function chartVersionFromPkg(chart, name) {
  // eslint-disable-line global-require
  const pkgName = require(`../node_modules/${chart}/package.json`);
  const version = JSON.stringify(pkgName.version);

  return `${name}: ${version}`;
}

function onAfterInit() {
  const isListItem = document.getElementsByTagName('li');
  const allListItems = Array.from(isListItem);
  const chartVersionDOMElement = document.getElementById('version');

  allListItems.forEach((li) => {
    if (Handsontable.dom.hasClass(li, 'selected')) {
      const chartName = li.children[0].textContent;
      const ActiveChart = mapChartsToWrapper[chartName];
      const chartVersion = mapChartNameToPackage[chartName];

      chartVersionDOMElement.textContent = chartVersionFromPkg(chartVersion, chartName);

      chartWrappers.push(new ActiveChart('chart', this));
    }
  });
}

function onBeforeChange(changes) {
  changes.forEach((change) => {
    chartWrappers.forEach((chartWrapper) => {
      const column = change[1];
      const currentValue = change[3] === '' ? 0 : change[3];

      chartWrapper.updateChartData(column, currentValue);
    });
  });
}

new Handsontable(document.getElementById('root'), {
  data: [
    [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],
  ],
  colHeaders: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  rowHeaders: true,
  type: 'numeric',
  width: 650,
  maxRows: 1,
  stretchH: 'all',
  allowInvalid: false,
  afterInit: onAfterInit,
  beforeChange: onBeforeChange,
});
  </textarea>
</div>
