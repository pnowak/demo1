{"version":3,"sources":["webpack:///webpack/bootstrap 4f7e70c2610d3e9cb9ba","webpack:///./integrations/index.js","webpack:///./integrations/amCharts.js","webpack:///./integrations/chartJs.js","webpack:///./integrations/fusionCharts.js","webpack:///./integrations/highcharts.js"],"names":["chartWrappers","selectedClass","mapChartsToWrapper","Map","clock","totalSeconds","start","td","hotInstance","row","column","parts","textContent","split","interval","setInterval","Math","floor","parseInt","hour","minute","second","setDataAtCell","pause","clearInterval","reset","set","onAfterInit","isListItem","document","getElementsByTagName","allListItems","Array","from","forEach","li","Handsontable","dom","hasClass","chartName","children","ActiveChartWrapper","get","push","onAfterSetDataAtCell","changes","change","chartWrapper","currentValue","console","log","updateChartData","onAfterRemoveColumn","index","removeColumn","onAfterRemoveRow","removeRow","startPauseResetButtonRenderer","instance","col","prop","value","isRows","rootElement","querySelectorAll","allRows","escaped","helper","stringify","addClass","timer","Object","create","addEvent","event","target","nodeName","toLowerCase","buttons","button","timeCell","getCell","innerHTML","renderers","registerRenderer","getElementById","data","colHeaders","rowHeaders","columns","type","source","dateFormat","correctFormat","allowEmpty","timeFormat","readOnly","renderer","contextMenu","minSpareRows","className","width","stretchH","allowInvalid","afterInit","afterSetDataAtCell","afterRemoveCol","afterRemoveRow","AmChartsWrapper","amChartsRootId","name","chart","AmCharts","makeChart","getChartOptions","objectGraph","fillAlphas","lineAlpha","balloonText","getSettings","valueField","graphs","i","countCols","dataProvider","validateNow","objectTeam","team","countRows","splice","j","getDataAtCell","theme","zipTeamWithGameData","valueAxes","gridColor","gridAlpha","dashLength","gridAboveGraphs","startDuration","updateChartGraphs","chartCursor","categoryBalloonEnabled","cursorAlpha","zoomable","categoryField","categoryAxis","gridPosition","tickPosition","tickLength","export","enabled","colsArray","obj","getDataAtCol","map","item","ChartJsWrapper","chartJsRootId","Chart","datasets","label","update","labels","config","updateTimeDate","zipTeamWithRowData","options","animation","duration","easing","legend","display","title","fontSize","fontStyle","text","tooltips","titleFontSize","bodyFontSize","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","rowsArray","categoriesArray","FusionChartsWrapper","fusionChartsRootId","FusionCharts","render","seriesname","getDataAtRow","o","args","dataSource","dataset","setJSONData","categories","category","length","id","renderAt","height","dataFormat","caption","xAxisName","yAxisName","updateChartColumns","HighchartsWrapper","highChartsRootId","Highcharts","addSeries","xAxis","series","remove"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f7e70c2610d3e9cb9ba","import HighchartsWrapper from './highcharts';\nimport AmChartsWrapper from './amCharts';\nimport ChartJsWrapper from './chartJs';\nimport FusionChartsWrapper from './fusionCharts';\n\nconst chartWrappers = [];\nconst selectedClass = 'selected';\nconst mapChartsToWrapper = new Map();\n\nconst clock = {\n  totalSeconds: 0,\n\n  start(td, hotInstance, row, column) {\n    const parts = td.textContent.split(':');\n\n    this.interval = setInterval(() => {\n      this.totalSeconds += 1;\n\n      parts[0] = Math.floor((this.totalSeconds / 3600) % 60);\n      parts[1] = Math.floor((this.totalSeconds / 60) % 60);\n      parts[2] = parseInt(this.totalSeconds % 60, 10);\n\n      const hour = (parts[0] < 10 ? '0' : '') + parts[0];\n      const minute = (parts[1] < 10 ? '0' : '') + parts[1];\n      const second = (parts[2] < 10 ? '0' : '') + parts[2];\n\n      hotInstance.setDataAtCell(row, column, `${hour}:${minute}:${second}`);\n    }, 1000);\n  },\n\n  pause() {\n    clearInterval(this.interval);\n    delete this.interval;\n  },\n\n  reset(hotInstance, row, column) {\n    clearInterval(this.interval);\n    delete this.interval;\n\n    this.totalSeconds = 0;\n\n    hotInstance.setDataAtCell(row, column, '00:00:00');\n  },\n};\n\nmapChartsToWrapper.set('Highcharts', HighchartsWrapper);\nmapChartsToWrapper.set('amCharts', AmChartsWrapper);\nmapChartsToWrapper.set('Chart.js', ChartJsWrapper);\nmapChartsToWrapper.set('FusionCharts', FusionChartsWrapper);\n\nfunction onAfterInit() {\n  const isListItem = document.getElementsByTagName('li');\n  const allListItems = Array.from(isListItem);\n\n  allListItems.forEach((li) => {\n    if (Handsontable.dom.hasClass(li, selectedClass)) {\n      const chartName = li.children[0].textContent;\n      const ActiveChartWrapper = mapChartsToWrapper.get(chartName);\n\n      chartWrappers.push(new ActiveChartWrapper('chart', this));\n    }\n  });\n}\n\nfunction onAfterSetDataAtCell(changes) {\n  changes.forEach((change) => {\n    chartWrappers.forEach((chartWrapper) => {\n      const [row, column, , currentValue] = change;\n      console.log(row, column, currentValue);\n\n      chartWrapper.updateChartData(row, column, currentValue, this);\n    });\n  });\n}\n\nfunction onAfterRemoveColumn(index) {\n  chartWrappers.forEach((chartWrapper) => {\n    chartWrapper.removeColumn(index, this);\n  });\n}\n\nfunction onAfterRemoveRow(index) {\n  chartWrappers.forEach((chartWrapper) => {\n    chartWrapper.removeRow(index, this);\n  });\n}\n\nfunction startPauseResetButtonRenderer(instance, td, row, col, prop, value) {\n  const isRows = instance.rootElement.querySelectorAll('.ht_master table tr');\n  const allRows = Array.from(isRows);\n  const escaped = Handsontable.helper.stringify(value);\n\n  Handsontable.dom.addClass(td, 'htCenter');\n\n  allRows.forEach(() => {\n    const timer = Object.create(clock); console.log(timer);\n\n    Handsontable.dom.addEvent(instance.rootElement, 'click', (event) => {\n      const target = event.target;\n\n      if (target.nodeName.toLowerCase() === 'button') {\n        const buttons = Array.from(document.getElementsByTagName('button'));\n\n        buttons.forEach((button) => {\n          if (button === target) {\n            const timeCell = instance.getCell(row, col - 1);\n\n            if (target.textContent === 'Start') {\n              target.textContent = 'Pause';\n              timer.start(timeCell, instance, row, col - 1);\n            }\n\n            if (target.textContent === 'Pause') {\n              target.textContent = 'Start';\n              timer.pause();\n            }\n\n            if (target.textContent === 'Reset') {\n              timer.reset(instance, row, col - 2);\n            }\n          }\n        });\n      }\n    });\n  });\n\n  td.innerHTML = escaped;\n\n  return td;\n}\n\nHandsontable.renderers.registerRenderer('start/pause/reset', startPauseResetButtonRenderer);\n\nnew Handsontable(document.getElementById('root'), {\n  data: [\n    ['Task 1', 'Tom', '13/11/2018', '00:00:00', '<button type=\"button\">Start</button>', '<button type=\"button\">Reset</button>'],\n    ['Task 2', 'Mark', '14/11/2018', '00:00:00', '<button type=\"button\">Start</button>', '<button type=\"button\">Reset</button>'],\n    ['Task 3', 'Kate', '15/11/2018', '00:00:00', '<button type=\"button\">Start</button>', '<button type=\"button\">Reset</button>'],\n  ],\n  colHeaders: ['Task', 'User', 'Date', 'Time spent', 'Start/Pause', 'Reset'],\n  rowHeaders: true,\n  columns: [\n    { },\n    {\n      type: 'dropdown',\n      source: ['Tom', 'Mark', 'Kate', 'Eddy'],\n    },\n    {\n      type: 'date',\n      dateFormat: 'MM/DD/YYYY',\n      correctFormat: true,\n      allowEmpty: false,\n    },\n    {\n      type: 'time',\n      timeFormat: 'HH:mm:ss',\n      correctFormat: true,\n      readOnly: true,\n    },\n    {\n      renderer: 'start/pause/reset',\n      readOnly: true,\n    },\n    {\n      renderer: 'start/pause/reset',\n      readOnly: true,\n    },\n  ],\n  contextMenu: ['remove_row', 'remove_col', 'commentsAddEdit'],\n  minSpareRows: 1,\n  className: 'htCenter',\n  width: 650,\n  stretchH: 'all',\n  allowInvalid: false,\n  afterInit: onAfterInit,\n  afterSetDataAtCell: onAfterSetDataAtCell,\n  afterRemoveCol: onAfterRemoveColumn,\n  afterRemoveRow: onAfterRemoveRow,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/index.js","/**\n* A amChart data visualisation.\n*\n* Create amChart instance linked with data from Handsontable.\n*\n* @class AmChartsWrapper.\n*/\nclass AmChartsWrapper {\n/**\n* Create a AmChartsWrapper.\n* @param {string} amChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(amChartsRootId, hotInstance) {\n    this.name = 'amCharts';\n    this.chart = AmCharts.makeChart(amChartsRootId,\n    AmChartsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* amChart options object.\n*\n* @returns {Object} amChart object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      type: 'serial',\n      theme: 'light',\n      dataProvider: AmChartsWrapper.zipTeamWithGameData(hotInstance),\n      valueAxes: [{\n        gridColor: '#FFFFFF',\n        gridAlpha: 0.2,\n        dashLength: 0,\n      }],\n      gridAboveGraphs: true,\n      startDuration: 1,\n      graphs: AmChartsWrapper.updateChartGraphs(hotInstance),\n      chartCursor: {\n        categoryBalloonEnabled: false,\n        cursorAlpha: 0,\n        zoomable: false,\n      },\n      categoryField: 'team',\n      categoryAxis: {\n        gridPosition: 'start',\n        gridAlpha: 0,\n        tickPosition: 'start',\n        tickLength: 20,\n      },\n      export: {\n        enabled: true,\n      },\n    };\n  }\n\n/**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  \"name\": \"Team 1\",\n*  \"game1\": 144,\n*  \"game2\": 30,\n*  and so on\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTeamWithGameData(hotInstance) {\n    const colsArray = [];\n\n    for (let i = 0; i < hotInstance.countCols(); i += 1) {\n      const obj = {};\n\n      obj.team = hotInstance.getSettings().colHeaders(i);\n\n      hotInstance.getDataAtCol(i).map((item, index) => {\n        obj[hotInstance.getSettings().rowHeaders(index)] = item;\n\n        return obj;\n      });\n\n      colsArray.push(obj);\n    }\n\n    return colsArray;\n  }\n\n  /**\n* Helper function.\n*\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static updateChartGraphs(hotInstance) {\n    const graphs = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const obj = {};\n\n      obj.fillAlphas = 0.8;\n      obj.lineAlpha = 0.2;\n      obj.type = 'column';\n      obj.balloonText = `${hotInstance.getSettings().rowHeaders(index)}: [[${hotInstance.getSettings().rowHeaders(index)}]]`;\n      obj.valueField = `${hotInstance.getSettings().rowHeaders(index)}`;\n\n      graphs.push(obj);\n    }\n    console.log(graphs);\n    return graphs;\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewGame(hotInstance, index) {\n    const objectGraph = {\n      fillAlphas: 0.8,\n      lineAlpha: 0.2,\n      type: 'column',\n      balloonText: `${hotInstance.getSettings().rowHeaders(index)}: [[${hotInstance.getSettings().rowHeaders(index)}]]`,\n      valueField: `${hotInstance.getSettings().rowHeaders(index)}`,\n    };\n\n    this.chart.graphs.push(objectGraph);\n\n    for (let i = 0; i < hotInstance.countCols(); i += 1) {\n      this.chart.dataProvider[i][hotInstance.getSettings().rowHeaders(index)] = 0;\n    }\n\n    this.chart.validateNow(true);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewTeam(hotInstance, index) {\n    const objectTeam = {\n      team: `Team ${index + 1}`,\n    };\n\n    for (let i = 0; i < hotInstance.countRows(); i += 1) {\n      objectTeam[hotInstance.getSettings().rowHeaders(i)] = 0;\n    }\n\n    this.chart.dataProvider.push(objectTeam);\n\n    this.chart.validateNow(true);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeRow(index, hotInstance) {\n    this.chart.graphs.splice(index, 1);\n\n    for (let j = 0; j < hotInstance.countRows(); j += 1) {\n      for (let i = 0; i < hotInstance.countCols(); i += 1) {\n        this.chart.dataProvider[i][hotInstance.getSettings().rowHeaders(j)] =\n        hotInstance.getDataAtCell(j, i);\n      }\n\n      this.chart.graphs[j].balloonText = `${hotInstance.getSettings().rowHeaders(j)}: [[${hotInstance.getSettings().rowHeaders(j)}]]`;\n      this.chart.graphs[j].valueField = `${hotInstance.getSettings().rowHeaders(j)}`;\n    }\n\n    this.chart.validateNow(true);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeColumn(index, hotInstance) {\n    this.chart.dataProvider.splice(index, 1);\n\n    for (let i = 0; i < hotInstance.countCols(); i += 1) {\n      this.chart.dataProvider[i].team = hotInstance.getSettings().colHeaders(i);\n\n      for (let j = 0; j < hotInstance.countRows(); j += 1) {\n        this.chart.graphs[j].balloonText = `${hotInstance.getSettings().rowHeaders(j)}: [[${hotInstance.getSettings().rowHeaders(j)}]]`;\n        this.chart.graphs[j].valueField = `${hotInstance.getSettings().rowHeaders(j)}`;\n      }\n    }\n\n    this.chart.validateNow(true);\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateChartData(row, column, value, hotInstance) {\n    this.chart.dataProvider[column][hotInstance.getSettings().rowHeaders(row)] = value;\n\n    this.chart.validateNow(true);\n  }\n}\n\nexport default AmChartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/amCharts.js","/**\n* A ChartJs data visualisation.\n*\n* Create ChartJs instance linked with data from Handsontable.\n*\n* @class ChartJsWrapper.\n*/\nclass ChartJsWrapper {\n/**\n* Create a ChartJsWrapper.\n* @param {string} chartJsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(chartJsRootId, hotInstance) {\n    this.name = 'ChartJs';\n    this.chart = new Chart(document.getElementById(chartJsRootId),\n    ChartJsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* ChartJs options object.\n*\n* @returns {Object} ChartJs object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      type: 'line',\n      data: {\n        labels: ChartJsWrapper.updateTimeDate(hotInstance),\n        datasets: [{ data: ChartJsWrapper.zipTeamWithRowData(hotInstance) }],\n      },\n      options: {\n        animation: {\n          duration: 1000,\n          easing: 'linear',\n        },\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          fontSize: 32,\n          fontStyle: 'normal',\n          text: 'Chart.js & Handsontable',\n        },\n        tooltips: {\n          titleFontSize: 21,\n          bodyFontSize: 18,\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontSize: 23,\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Time spent',\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              fontSize: 23,\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Date',\n            },\n          }],\n        },\n      },\n    };\n  }\n\n  /**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  label: \"Game 1\",\n*  backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n*  data: [144, 12, 13]\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTeamWithRowData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      if (hotInstance.getDataAtCell(index, 3) != null) {\n        rowsArray.push([hotInstance.getDataAtCell(index, 3)]);\n      }\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static updateTimeDate(hotInstance) {\n    const categoriesArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      if (hotInstance.getDataAtCell(index, 3) != null) {\n        categoriesArray.push(hotInstance.getSettings().data[index][2]);\n      }\n    }\n\n    return categoriesArray;\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeRow(index, hotInstance) {\n    this.chart.data.datasets.splice(index, 1);\n\n    for (let i = 0; i < hotInstance.countRows(); i += 1) {\n      this.chart.data.datasets[i].label = hotInstance.getSettings().rowHeaders(i);\n    }\n\n    this.chart.update();\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeColumn(index, hotInstance) {\n    this.chart.data.labels.splice(index, 1);\n\n    for (let i = 0; i < hotInstance.countCols(); i += 1) {\n      this.chart.data.labels[i] = hotInstance.getSettings().colHeaders(i);\n\n      for (let j = 0; j < hotInstance.countRows(); j += 1) {\n        this.chart.data.datasets[j].label = hotInstance.getSettings().rowHeaders(j);\n        this.chart.data.datasets[j].data[index] = hotInstance.getDataAtCell(j, i);\n      }\n    }\n\n    this.chart.update();\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateChartData(row, column, value) {\n    this.chart.config.data.datasets[0].data[row].push(value);\n    this.chart.update();\n  }\n}\n\nexport default ChartJsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/chartJs.js","/**\n* A FusionCharts data visualisation.\n*\n* Create FusionCharts instance linked with data from Handsontable.\n*\n* @class FusionChartsWrapper.\n*/\nclass FusionChartsWrapper {\n/**\n* Create a FusionChartsWrapper.\n* @param {string} fusionChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(fusionChartsRootId, hotInstance) {\n    this.name = 'fusioncharts';\n    this.chart = new FusionCharts(FusionChartsWrapper\n      .getChartOptions(fusionChartsRootId, hotInstance))\n    .render();\n  }\n\n/**\n*\n* FusionCharts options object.\n*\n* @returns {Object} FusionCharts object configs.\n*/\n  static getChartOptions(fusionChartsRootId, hotInstance) {\n    return {\n      id: 'fusionChart',\n      type: 'mscolumn2d',\n      renderAt: fusionChartsRootId,\n      width: 650,\n      height: 420,\n      dataFormat: 'json',\n      dataSource: {\n        chart: {\n          caption: 'FusionCharts & Handsontable',\n          xAxisName: 'Teams',\n          yAxisName: 'Values',\n        },\n        categories: [{ category: FusionChartsWrapper.updateChartColumns(hotInstance) }],\n        dataset: FusionChartsWrapper.zipTeamWithRowData(hotInstance),\n      },\n    };\n  }\n\n/**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  \"seriesname\": \"Game 1\",\n*  \"data\": [144, 12, 13]\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTeamWithRowData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const obj = {};\n\n      obj.seriesname = hotInstance.getSettings().rowHeaders(index);\n      obj.data = hotInstance.getDataAtRow(index).map((item) => {\n        const o = {};\n\n        o.value = item;\n\n        return o;\n      });\n\n      rowsArray.push(obj); console.log(obj);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static updateChartColumns(hotInstance) {\n    const category = [];\n\n    for (let index = 0; index < hotInstance.countCols(); index += 1) {\n      const o = {};\n\n      o.label = hotInstance.getSettings().colHeaders(index);\n\n      category.push(o);\n    }\n\n    return category;\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewGame(hotInstance, index) {\n    const obj = {};\n\n    obj.seriesname = hotInstance.getSettings().rowHeaders(index);\n    obj.data = hotInstance.getDataAtRow(index).map((item) => {\n      const o = {};\n\n      o.value = item;\n\n      return o;\n    });\n\n    this.chart.args.dataSource.dataset.push(obj);\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewTeam(hotInstance, index) {\n    const o = {};\n    o.label = hotInstance.getSettings().colHeaders(index);\n\n    this.chart.args.dataSource.categories[0].category.push(o);\n\n    for (let i = 0; i < this.chart.args.dataSource.dataset.length; i += 1) {\n      this.chart.args.dataSource.dataset[i].data[index] = { value: null };\n    }\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeRow(index, hotInstance) {\n    this.chart.args.dataSource.dataset.splice(index, 1);\n\n    for (let i = 0; i < hotInstance.countRows(); i += 1) {\n      this.chart.args.dataSource.dataset[i].seriesname = hotInstance.getSettings().rowHeaders(i);\n    }\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeColumn(index, hotInstance) {\n    this.chart.args.dataSource.categories[0].category.splice(index, 1);\n\n    for (let i = 0; i < hotInstance.countCols(); i += 1) {\n      this.chart.args.dataSource.categories[0].category[i].label =\n      hotInstance.getSettings().colHeaders(i);\n\n      for (let j = 0; j < hotInstance.countRows(); j += 1) {\n        this.chart.args.dataSource.dataset[j].seriesname = hotInstance.getSettings().rowHeaders(j);\n        this.chart.args.dataSource.dataset[j].data[i].value = hotInstance.getDataAtCell(j, i);\n      }\n    }\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateChartData(row, column, value) {\n    this.chart.args.dataSource.dataset[row].data[column].value = value;\n\n    this.chart.setJSONData(this.chart.args.dataSource);\n  }\n}\n\nexport default FusionChartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/fusionCharts.js","/**\n* A Highcharts data visualisation.\n*\n* Create Highcharts instance linked with data from Handsontable.\n*\n* @class HighchartsWrapper.\n*/\nclass HighchartsWrapper {\n/**\n* Create a HighChartsWrapper.\n* @param {string} highChartsRootId - element id.\n* @param {object} hotInstance - a reference to the Handsontable instance.\n*/\n  constructor(highChartsRootId, hotInstance) {\n    this.name = 'highcharts';\n    this.chart = new Highcharts.Chart(document.getElementById(highChartsRootId),\n    HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* HighCharts options object.\n*\n* @returns {Object} HighCharts object configs.\n*/\n  static getChartOptions(hotInstance) {\n    return {\n      chart: {\n        type: 'column',\n        width: 650,\n      },\n      title: {\n        text: 'Highcharts & Handsontable',\n      },\n      xAxis: {\n        categories: HighchartsWrapper.updateChartColumns(hotInstance),\n      },\n      series: HighchartsWrapper.zipTeamWithRowData(hotInstance),\n    };\n  }\n\n  /**\n* Helper function.\n*\n* Zip column header to the value of the column from Handsontable object settings.\n* amCharts data provider needs data array in form:\n*\n* @example\n* {\n*  \"name\": \"Game 1\",\n*  \"data\": [144, 12, 13]\n* }\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static zipTeamWithRowData(hotInstance) {\n    const rowsArray = [];\n\n    for (let index = 0; index < hotInstance.countRows(); index += 1) {\n      const obj = {};\n\n      obj.name = hotInstance.getSettings().rowHeaders(index);\n      obj.data = hotInstance.getDataAtRow(index);\n\n      rowsArray.push(obj); console.log(obj);\n    }\n\n    return rowsArray;\n  }\n\n  /**\n* Helper function.\n*\n*\n*\n* @param {Object} Handsontable object.\n* @returns {Array} a merged key-value pair in array.\n*/\n  static updateChartColumns(hotInstance) {\n    const categoriesArray = [];\n\n    for (let index = 0; index < hotInstance.countCols(); index += 1) {\n      categoriesArray.push(hotInstance.getSettings().colHeaders(index));\n    }\n\n    return categoriesArray;\n  }\n\n   /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewGame(hotInstance, index) {\n    const obj = {};\n\n    obj.name = hotInstance.getSettings().rowHeaders(index);\n    obj.data = hotInstance.getDataAtRow(index);\n\n    this.chart.addSeries(obj);\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  addNewTeam(hotInstance, index) {\n    this.chart.xAxis[0].categories.push(hotInstance.getSettings().colHeaders(index));\n\n    for (let i = 0; i < this.chart.series.length; i += 1) {\n      this.chart.series[i].data[index] = hotInstance.getDataAtRow(index);\n    }\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n  /**\n*\n*\n*\n* @param {index}\n*\n*/\n  removeRow(index, hotInstance) {\n    this.chart.series[index].remove();\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n  /**\n*\n*\n*\n* @param {}\n*\n*/\n  removeColumn(index, hotInstance) {\n    this.chart.xAxis[0].categories.splice(index, 1);\n\n    this.chart.update(HighchartsWrapper.getChartOptions(hotInstance));\n  }\n\n/**\n*\n* Watches changes from Handsontable and updates it in the chart.\n*\n* @param {Number} row row index.\n* @param {Number} column column index.\n* @param {Number} value column value.\n*\n*/\n  updateChartData(row, column, value) {\n    this.chart.series[row].data[column].update(value);\n  }\n}\n\nexport default HighchartsWrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./integrations/highcharts.js"],"sourceRoot":""}