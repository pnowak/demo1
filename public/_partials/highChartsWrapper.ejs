class HighchartsWrapper {
  constructor(highChartsRootId, hotInstance) {
    this.name = 'highcharts';
    this.chart = new Highcharts.Chart(document.getElementById(highChartsRootId),
    HighchartsWrapper.getChartOptions(hotInstance));
  }

  static getChartOptions(hotInstance) {
    return {
      chart: {
        type: 'column',
        width: 650,
      },
      title: {
        text: 'Highcharts and Handsontable',
      },
      xAxis: {
        categories: hotInstance.getSettings().colHeaders,
      },
      series: [{
        colorByPoint: true,
        data: hotInstance.getDataAtRow(0),
      }],
    };
  }

  updateChartData(column, value) {
    this.chart.series[0].data[column].update(value);
  }
}

const chartWrappers = [];

function onAfterInit() {
  chartWrappers.push(new HighchartsWrapper('chart', this));
}

function onBeforeChange(changes) {
  changes.forEach((change) => {
    chartWrappers.forEach((chartWrapper) => {
      const [row, column] = change;
      const currentValue = change[3] === '' ? 0 : change[3];

      if (change[3] === '') {
        this.setDataAtCell(row, column, 0, 'onBeforeChange');
      }

      chartWrapper.updateChartData(column, currentValue);
    });
  });
}

document.addEventListener("DOMContentLoaded", function() {
  new Handsontable(document.getElementById('root'), {
    data: [
      [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],
    ],
    colHeaders: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    rowHeaders: true,
    type: 'numeric',
    width: 650,
    maxRows: 1,
    stretchH: 'all',
    allowInvalid: false,
    afterInit: onAfterInit,
    beforeChange: onBeforeChange,
  });
});