<div id="chart"></div>
<div id="code">
  <ul>
    <li class="right">
      <a href="" id="jsfiddle">Edit in JSFiddle</a>
    </li>
  </ul>
  <textarea id="codeExample" name="">
class HighchartsWrapper {
  constructor(highChartsRootId, hotInstance) {
    this.name = 'highcharts';
    this.chart = new Highcharts.Chart(document.getElementById(highChartsRootId),
    HighchartsWrapper.getChartOptions(hotInstance));
  }

  static getChartOptions(hotInstance) {
    return {
      chart: {
        type: 'column',
        width: 650,
      },
      title: {
        text: 'Highcharts and Handsontable',
      },
      xAxis: {
        categories: hotInstance.getSettings().colHeaders,
      },
      series: [{
        colorByPoint: true,
        data: hotInstance.getDataAtRow(0),
      }],
    };
  }

  updateChartData(column, value) {
    this.chart.series[0].data[column].update(value);
  }
}

const chartWrappers = [];

const mapChartsToWrapper = {
  HighCharts: HighchartsWrapper
};

const mapChartNameToPackage = {
  HighCharts: 'highcharts'
};

function chartVersionFromPkg(chart, name) {
  // eslint-disable-line global-require
  const pkgName = require(`../node_modules/${chart}/package.json`);
  const version = JSON.stringify(pkgName.version);

  return `${name}: ${version}`;
}

function onAfterInit() {
  const isListItem = document.getElementsByTagName('li');
  const allListItems = Array.from(isListItem);
  const chartVersionDOMElement = document.getElementById('version');

  allListItems.forEach((li) => {
    if (Handsontable.dom.hasClass(li, 'selected')) {
      const chartName = li.children[0].textContent;
      const ActiveChart = mapChartsToWrapper[chartName];
      const chartVersion = mapChartNameToPackage[chartName];

      chartVersionDOMElement.textContent = chartVersionFromPkg(chartVersion, chartName);

      chartWrappers.push(new ActiveChart('chart', this));
    }
  });
}

function onBeforeChange(changes) {
  changes.forEach((change) => {
    chartWrappers.forEach((chartWrapper) => {
      const column = change[1];
      const currentValue = change[3] === '' ? 0 : change[3];

      chartWrapper.updateChartData(column, currentValue);
    });
  });
}

new Handsontable(document.getElementById('root'), {
  data: [
    [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],
  ],
  colHeaders: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  rowHeaders: true,
  type: 'numeric',
  width: 650,
  maxRows: 1,
  stretchH: 'all',
  allowInvalid: false,
  afterInit: onAfterInit,
  beforeChange: onBeforeChange,
});
  </textarea>
</div>
